#!/usr/bin/env python3
"""
Script para inicializar a base de conhecimento jur√≠dico
com documentos b√°sicos do direito brasileiro
"""

import asyncio
import os
import sys
import json
from datetime import datetime
from pathlib import Path

# Add services directory to path
sys.path.insert(0, str(Path(__file__).parent.parent / "services" / "ia-juridica"))

from app.core.config import get_settings
from app.core.logging import setup_logging, get_logger
from app.services.vector_service import VectorService
from app.services.rag_service import RAGService


# Sample legal documents for knowledge base initialization
SAMPLE_LEGAL_DOCUMENTS = [
    {
        "title": "Constitui√ß√£o Federal - Art. 5¬∫ (Direitos Fundamentais)",
        "content": """Art. 5¬∫ Todos s√£o iguais perante a lei, sem distin√ß√£o de qualquer natureza, garantindo-se aos brasileiros e aos estrangeiros residentes no Pa√≠s a inviolabilidade do direito √† vida, √† liberdade, √† igualdade, √† seguran√ßa e √† propriedade, nos termos seguintes:

I - homens e mulheres s√£o iguais em direitos e obriga√ß√µes, nos termos desta Constitui√ß√£o;
II - ningu√©m ser√° obrigado a fazer ou deixar de fazer alguma coisa sen√£o em virtude de lei;
III - ningu√©m ser√° submetido a tortura nem a tratamento desumano ou degradante;
IV - √© livre a manifesta√ß√£o do pensamento, sendo vedado o anonimato;
V - √© assegurado o direito de resposta, proporcional ao agravo, al√©m da indeniza√ß√£o por dano material, moral ou √† imagem;
VI - √© inviol√°vel a liberdade de consci√™ncia e de cren√ßa, sendo assegurado o livre exerc√≠cio dos cultos religiosos e garantida, na forma da lei, a prote√ß√£o aos locais de culto e a suas liturgias;
VII - √© assegurada, nos termos da lei, a presta√ß√£o de assist√™ncia religiosa nas entidades civis e militares de interna√ß√£o coletiva;
VIII - ningu√©m ser√° privado de direitos por motivo de cren√ßa religiosa ou de convic√ß√£o filos√≥fica ou pol√≠tica, salvo se as invocar para eximir-se de obriga√ß√£o legal a todos imposta e recusar-se a cumprir presta√ß√£o alternativa, fixada em lei;""",
        "metadata": {
            "source_type": "constituicao",
            "law_number": "Constitui√ß√£o Federal de 1988",
            "article_number": "Art. 5¬∫",
            "chapter": "Dos Direitos e Deveres Individuais e Coletivos",
            "subject": "direitos_fundamentais",
            "keywords": ["direitos fundamentais", "igualdade", "liberdade", "dignidade humana"]
        }
    },
    {
        "title": "C√≥digo Civil - Art. 186 (Ato Il√≠cito)",
        "content": """Art. 186. Aquele que, por a√ß√£o ou omiss√£o volunt√°ria, neglig√™ncia ou imprud√™ncia, violar direito e causar dano a outrem, ainda que exclusivamente moral, comete ato il√≠cito.

Este artigo estabelece os elementos essenciais da responsabilidade civil extracontratual:
1. Conduta (a√ß√£o ou omiss√£o)
2. Culpa (neglig√™ncia ou imprud√™ncia) ou dolo (a√ß√£o volunt√°ria)
3. Nexo causal
4. Dano (material ou moral)

A responsabilidade civil tem como objetivo reparar o dano causado, restabelecendo o equil√≠brio patrimonial e moral da v√≠tima.""",
        "metadata": {
            "source_type": "codigo_civil",
            "law_number": "Lei n¬∫ 10.406/2002",
            "article_number": "Art. 186",
            "book": "Parte Geral",
            "title": "Dos Atos Jur√≠dicos L√≠citos e Il√≠citos",
            "subject": "responsabilidade_civil",
            "keywords": ["ato il√≠cito", "responsabilidade civil", "dano", "culpa", "neglig√™ncia"]
        }
    },
    {
        "title": "CLT - Art. 482 (Justa Causa)",
        "content": """Art. 482 - Constituem justa causa para rescis√£o do contrato de trabalho pelo empregador:

a) ato de improbidade;
b) incontin√™ncia de conduta ou mau procedimento;
c) negocia√ß√£o habitual por conta pr√≥pria ou alheia sem permiss√£o do empregador, e quando constituir ato de concorr√™ncia √† empresa para a qual trabalha o empregado, ou for prejudicial ao servi√ßo;
d) condena√ß√£o criminal do empregado, passada em julgado, caso n√£o tenha havido suspens√£o da execu√ß√£o da pena;
e) des√≠dia no desempenho das respectivas fun√ß√µes;
f) embriaguez habitual ou em servi√ßo;
g) viola√ß√£o de segredo da empresa;
h) ato de indisciplina ou de insubordina√ß√£o;
i) abandono de emprego;
j) ato lesivo da honra ou da boa fama praticado no servi√ßo contra qualquer pessoa, ou ofensas f√≠sicas, nas mesmas condi√ß√µes, salvo em caso de leg√≠tima defesa, pr√≥pria ou de outrem;
k) ato lesivo da honra ou da boa fama ou ofensas f√≠sicas praticadas contra o empregador e superiores hier√°rquicos, salvo em caso de leg√≠tima defesa, pr√≥pria ou de outrem;
l) pr√°tica constante de jogos de azar.""",
        "metadata": {
            "source_type": "clt",
            "law_number": "Decreto-Lei n¬∫ 5.452/1943",
            "article_number": "Art. 482",
            "chapter": "Da Rescis√£o",
            "subject": "justa_causa",
            "keywords": ["justa causa", "rescis√£o", "trabalho", "empregado", "demiss√£o"]
        }
    },
    {
        "title": "C√≥digo Penal - Art. 121 (Homic√≠dio)",
        "content": """Art. 121. Matar algu√©m:
Pena - reclus√£o, de seis a vinte anos.

¬ß 1¬∫ Se o agente comete o crime impelido por motivo de relevante valor social ou moral, ou sob o dom√≠nio de violenta emo√ß√£o, logo em seguida a injusta provoca√ß√£o da v√≠tima, o juiz pode reduzir a pena de um sexto a um ter√ßo.

¬ß 2¬∫ Se o homic√≠dio √© cometido:
I - mediante paga ou promessa de recompensa, ou por outro motivo torpe;
II - por motivo f√∫til;
III - com emprego de veneno, fogo, explosivo, asfixia, tortura ou outro meio insidioso ou cruel, ou de que possa resultar perigo comum;
IV - √† trai√ß√£o, de emboscada, ou mediante dissimula√ß√£o ou outro recurso que dificulte ou torne imposs√≠vel a defesa do ofendido;
V - para assegurar a execu√ß√£o, a oculta√ß√£o, a impunidade ou vantagem de outro crime:
Pena - reclus√£o, de doze a trinta anos.

¬ß 3¬∫ Se o homic√≠dio √© culposo:
Pena - deten√ß√£o, de um a tr√™s anos.""",
        "metadata": {
            "source_type": "codigo_penal",
            "law_number": "Decreto-Lei n¬∫ 2.848/1940",
            "article_number": "Art. 121",
            "title": "Dos Crimes Contra a Vida",
            "subject": "homicidio",
            "keywords": ["homic√≠dio", "crime", "vida", "qualificado", "culposo", "privilegiado"]
        }
    },
    {
        "title": "Lei Maria da Penha - Art. 7¬∫ (Formas de Viol√™ncia)",
        "content": """Art. 7¬∫ S√£o formas de viol√™ncia dom√©stica e familiar contra a mulher, entre outras:

I - a viol√™ncia f√≠sica, entendida como qualquer conduta que ofenda sua integridade ou sa√∫de corporal;

II - a viol√™ncia psicol√≥gica, entendida como qualquer conduta que lhe cause dano emocional e diminui√ß√£o da autoestima ou que lhe prejudique e perturbe o pleno desenvolvimento ou que vise degradar ou controlar suas a√ß√µes, comportamentos, cren√ßas e decis√µes, mediante amea√ßa, constrangimento, humilha√ß√£o, manipula√ß√£o, isolamento, vigil√¢ncia constante, persegui√ß√£o contumaz, insulto, chantagem, viola√ß√£o de sua intimidade, ridiculariza√ß√£o, explora√ß√£o e limita√ß√£o do direito de ir e vir ou qualquer outro meio que lhe cause preju√≠zo √† sa√∫de psicol√≥gica e √† autodetermina√ß√£o;

III - a viol√™ncia sexual, entendida como qualquer conduta que a constranja a presenciar, a manter ou a participar de rela√ß√£o sexual n√£o desejada, mediante intimida√ß√£o, amea√ßa, coa√ß√£o ou uso da for√ßa;

IV - a viol√™ncia patrimonial, entendida como qualquer conduta que configure reten√ß√£o, subtra√ß√£o, destrui√ß√£o parcial ou total de seus objetos, instrumentos de trabalho, documentos pessoais, bens, valores e direitos ou recursos econ√¥micos, incluindo os destinados a satisfazer suas necessidades;

V - a viol√™ncia moral, entendida como qualquer conduta que configure cal√∫nia, difama√ß√£o ou inj√∫ria.""",
        "metadata": {
            "source_type": "lei_especial",
            "law_number": "Lei n¬∫ 11.340/2006",
            "article_number": "Art. 7¬∫",
            "subject": "violencia_domestica",
            "keywords": ["Maria da Penha", "viol√™ncia dom√©stica", "mulher", "viol√™ncia f√≠sica", "viol√™ncia psicol√≥gica"]
        }
    }
]


async def initialize_knowledge_base():
    """Initialize the knowledge base with sample legal documents"""
    logger = get_logger(__name__)
    
    try:
        # Setup logging
        settings = get_settings()
        setup_logging(settings.log_level)
        
        logger.info("üöÄ Iniciando configura√ß√£o da base de conhecimento jur√≠dico")
        
        # Initialize services
        logger.info("üìä Inicializando Vector Service")
        vector_service = VectorService(settings.chroma_host, settings.chroma_port)
        await vector_service.initialize()
        
        logger.info("üß† Inicializando RAG Service") 
        rag_service = RAGService(vector_service, settings)
        await rag_service.initialize()
        
        # Check current knowledge base size
        stats = await vector_service.get_collection_stats()
        logger.info(f"üìà Base de conhecimento atual: {stats['total_documents']} documentos")
        
        if stats['total_documents'] > 0:
            response = input("A base de conhecimento j√° cont√©m documentos. Deseja adicionar os exemplos mesmo assim? (s/N): ")
            if response.lower() not in ['s', 'sim', 'y', 'yes']:
                logger.info("‚ùå Opera√ß√£o cancelada pelo usu√°rio")
                return
        
        # Add sample documents
        logger.info(f"üìù Adicionando {len(SAMPLE_LEGAL_DOCUMENTS)} documentos de exemplo")
        
        total_chunks = 0
        for i, doc in enumerate(SAMPLE_LEGAL_DOCUMENTS, 1):
            logger.info(f"‚ûï Processando documento {i}/{len(SAMPLE_LEGAL_DOCUMENTS)}: {doc['title']}")
            
            doc_ids = await rag_service.add_legal_document(
                content=doc['content'],
                metadata=doc['metadata']
            )
            
            total_chunks += len(doc_ids)
            logger.info(f"   ‚úÖ Criado {len(doc_ids)} chunks para este documento")
        
        # Final statistics
        final_stats = await vector_service.get_collection_stats()
        logger.info(f"üéâ Base de conhecimento inicializada com sucesso!")
        logger.info(f"üìä Total de documentos: {final_stats['total_documents']}")
        logger.info(f"üì¶ Total de chunks adicionados: {total_chunks}")
        
        # Test a sample query
        logger.info("üîç Testando consulta de exemplo...")
        test_result = await rag_service.process_legal_query(
            question="O que s√£o direitos fundamentais?",
            query_type="geral"
        )
        
        logger.info(f"‚úÖ Teste conclu√≠do - encontrados {test_result['retrieved_docs_count']} documentos relevantes")
        
        # Clean up
        await rag_service.close()
        await vector_service.close()
        
        logger.info("üèÅ Configura√ß√£o da base de conhecimento conclu√≠da!")
        
    except Exception as e:
        logger.error(f"‚ùå Erro ao inicializar base de conhecimento: {e}")
        raise


async def export_knowledge_base():
    """Export current knowledge base to JSON file"""
    logger = get_logger(__name__)
    
    try:
        settings = get_settings()
        setup_logging(settings.log_level)
        
        logger.info("üì§ Exportando base de conhecimento")
        
        # Initialize vector service
        vector_service = VectorService(settings.chroma_host, settings.chroma_port)
        await vector_service.initialize()
        
        # Get all documents (this is a simplified export)
        stats = await vector_service.get_collection_stats()
        
        export_data = {
            "export_timestamp": datetime.utcnow().isoformat(),
            "total_documents": stats["total_documents"],
            "collection_name": stats["collection_name"],
            "metadata_fields": stats["metadata_fields"]
        }
        
        # Save export
        export_file = f"knowledge_base_export_{datetime.now().strftime('%Y%m%d_%H%M%S')}.json"
        with open(export_file, 'w', encoding='utf-8') as f:
            json.dump(export_data, f, indent=2, ensure_ascii=False)
        
        logger.info(f"‚úÖ Base de conhecimento exportada para: {export_file}")
        
        await vector_service.close()
        
    except Exception as e:
        logger.error(f"‚ùå Erro ao exportar base de conhecimento: {e}")
        raise


def main():
    """Main function"""
    if len(sys.argv) < 2:
        print("Uso: python setup-knowledge-base.py [init|export]")
        print("  init   - Inicializa a base de conhecimento com documentos de exemplo")
        print("  export - Exporta a base de conhecimento atual")
        sys.exit(1)
    
    command = sys.argv[1]
    
    if command == "init":
        asyncio.run(initialize_knowledge_base())
    elif command == "export":
        asyncio.run(export_knowledge_base())
    else:
        print(f"Comando desconhecido: {command}")
        sys.exit(1)


if __name__ == "__main__":
    main()