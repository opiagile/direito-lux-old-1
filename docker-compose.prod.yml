# Docker Compose para PRODUÇÃO/HOMOLOGAÇÃO/DEMO
# Tudo containerizado: API Go + Infraestrutura

version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: direito-lux-postgres
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - direito-lux-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U keycloak"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: direito-lux-redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - direito-lux-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  keycloak-1:
    image: quay.io/keycloak/keycloak:26.0
    container_name: direito-lux-keycloak-1
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
      KC_HOSTNAME: localhost
      KC_HOSTNAME_STRICT: false
      KC_HTTP_ENABLED: true
      KC_HEALTH_ENABLED: true
      KC_METRICS_ENABLED: true
      KC_CACHE: ispn
      KC_CACHE_CONFIG_FILE: cache-ispn.xml
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      JAVA_OPTS_APPEND: -Djgroups.dns.query=keycloak
    command:
      - start-dev
      - --cache-config-file=cache-ispn.xml
    volumes:
      - ./keycloak/cache-ispn.xml:/opt/keycloak/conf/cache-ispn.xml
      - ./keycloak/themes:/opt/keycloak/themes
    ports:
      - "8080:8080"
      - "8443:8443"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - direito-lux-network
    healthcheck:
      test: ["CMD-SHELL", "nc -z localhost 8080 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  keycloak-2:
    image: quay.io/keycloak/keycloak:26.0
    container_name: direito-lux-keycloak-2
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
      KC_HOSTNAME: localhost
      KC_HOSTNAME_STRICT: false
      KC_HTTP_ENABLED: true
      KC_HEALTH_ENABLED: true
      KC_METRICS_ENABLED: true
      KC_CACHE: ispn
      KC_CACHE_CONFIG_FILE: cache-ispn.xml
      JAVA_OPTS_APPEND: -Djgroups.dns.query=keycloak
    command:
      - start-dev
      - --cache-config-file=cache-ispn.xml
    volumes:
      - ./keycloak/cache-ispn.xml:/opt/keycloak/conf/cache-ispn.xml
      - ./keycloak/themes:/opt/keycloak/themes
    ports:
      - "8081:8080"
      - "8444:8443"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      keycloak-1:
        condition: service_started
    networks:
      - direito-lux-network
    healthcheck:
      test: ["CMD-SHELL", "nc -z localhost 8080 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  direito-lux-api:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: direito-lux-api
    ports:
      - "9001:9001"
    environment:
      - DIREITO_LUX_DATABASE_HOST=postgres
      - DIREITO_LUX_REDIS_HOST=redis
      - DIREITO_LUX_KEYCLOAK_BASEURL=http://keycloak-1:8080
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      keycloak-1:
        condition: service_started
    networks:
      - direito-lux-network
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:9001/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:alpine
    container_name: direito-lux-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - keycloak-1
      - keycloak-2
      - direito-lux-api
    networks:
      - direito-lux-network

volumes:
  postgres_data:
  redis_data:

networks:
  direito-lux-network:
    driver: bridge