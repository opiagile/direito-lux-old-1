input {
  tcp {
    port => 5000
    codec => json_lines
    tags => ["direito-lux", "consulta-service"]
  }

  beats {
    port => 5044
  }
}

filter {
  # Parse timestamp
  if [timestamp] {
    date {
      match => [ "timestamp", "ISO8601" ]
    }
  }

  # Add geolocation if IP exists
  if [ip] {
    geoip {
      source => "ip"
      target => "geoip"
    }
  }

  # Parse circuit breaker metrics
  if [circuit_breaker] {
    mutate {
      add_field => { 
        "circuit_breaker_name" => "%{[circuit_breaker][name]}"
        "circuit_breaker_state" => "%{[circuit_breaker][state]}"
      }
    }
  }

  # Extract request ID for correlation
  if [request_id] {
    mutate {
      add_field => { "correlation_id" => "%{request_id}" }
    }
  }

  # Tag errors and failures
  if [level] == "error" or [level] == "ERROR" {
    mutate {
      add_tag => [ "error" ]
    }
  }

  if [level] == "warn" or [level] == "WARN" {
    mutate {
      add_tag => [ "warning" ]
    }
  }

  # Parse consulta types
  if [message] =~ /consulta/ {
    if [message] =~ /processo/ {
      mutate { add_tag => [ "consulta-processo" ] }
    }
    if [message] =~ /legislacao/ {
      mutate { add_tag => [ "consulta-legislacao" ] }
    }
    if [message] =~ /jurisprudencia/ {
      mutate { add_tag => [ "consulta-jurisprudencia" ] }
    }
  }
}

output {
  elasticsearch {
    hosts => ["http://elasticsearch:9200"]
    index => "direito-lux-logs-%{+YYYY.MM.dd}"
    template_name => "direito-lux"
    template_pattern => "direito-lux-*"
    template => {
      "index_patterns" => ["direito-lux-*"]
      "settings" => {
        "number_of_shards" => 1
        "number_of_replicas" => 0
      }
      "mappings" => {
        "properties" => {
          "@timestamp" => { "type" => "date" }
          "level" => { "type" => "keyword" }
          "message" => { "type" => "text" }
          "service" => { "type" => "keyword" }
          "request_id" => { "type" => "keyword" }
          "circuit_breaker_name" => { "type" => "keyword" }
          "circuit_breaker_state" => { "type" => "keyword" }
          "consulta_id" => { "type" => "keyword" }
          "tribunal" => { "type" => "keyword" }
          "tema" => { "type" => "text" }
          "geoip" => {
            "properties" => {
              "location" => { "type" => "geo_point" }
            }
          }
        }
      }
    }
  }

  # Debug output (comment in production)
  stdout {
    codec => rubydebug
  }
}